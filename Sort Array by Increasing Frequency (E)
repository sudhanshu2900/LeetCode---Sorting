PROBLEM LINK: https://leetcode.com/problems/sort-array-by-increasing-frequency/


SOLUTION:

    static bool compare(pair<int, int>&a, pair<int, int>&b){                                //to sort in pairs
        return (b.second == a.second) ? a.first > b.first : a.second < b.second;
    }
    
    vector<int> frequencySort(vector<int>& nums) {
        unordered_map<int, int> mp;
        vector<int> res;
        
        for(int i:nums)                                                                     //insert elements in map with thier frequencies
            mp[i]++;
        
        vector<pair<int, int>> temp;                                                        //It store elements and its frequencies
        
        for(auto it: mp){                                                                   //Insert all map elements into 'temp' with its frequencies
            temp.push_back(it);
        }
        
        sort(temp.begin(), temp.end(), compare);                                            //Sort 'temp'
        
        for(auto it: temp){                                                                 //Traverse 'temp' and  insert into 'res' array with the respective frquencies
            for(int i=0;i<it.second; i++)
                res.push_back(it.first);
        }
        
        return res;
    }
    
    
    
    
    
