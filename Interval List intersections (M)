PROBLEM: https://leetcode.com/problems/interval-list-intersections/


SOLUTION:

vector<vector<int>> intervalIntersection(vector<vector<int>>& firstList, vector<vector<int>>& secondList) {
        
        vector<vector<int>> res;
        
        if(firstList.size() == 0 || secondList.size() == 0) return res;
        
        int i=0, j=0;
        
        while(i<firstList.size() && j<secondList.size()){
            
            int first = max(firstList[i][0], secondList[j][0]);
            int second = min(firstList[i][1], secondList[j][1]);
            
            if(first <= second) res.push_back({first, second});
            
            if(firstList[i][1] < secondList[j][1]) i++;                     // check first's 2nd element is lower than second's 2nd element.
            else j++;                                                       // check first's 2nd element is greater than second's 2nd element.

        }
        
        return res;
    }
    
    
    
    
    
    
